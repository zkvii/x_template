plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.palantir.docker" version "0.35.0"
	id "com.avast.gradle.docker-compose" version "0.17.5"
}

group = 'com.zkvii'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.session:spring-session-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
//bootJar {
//	// Configuration for the Spring Boot jar
//	archiveFileName = 'my-application.jar' // Replace with your jar file name
//	// Additional configurations if required
//}
bootJar {
	archiveBaseName = 'zkvii.jar'
	archiveVersion.set('0.0.1-SNAPSHOT')
}
docker {
	name "x_template"
	files bootJar.archiveFile
	buildArgs(['JAR_FILE': "${bootJar.archiveBaseName.get()}-${bootJar.archiveVersion.get()}.jar"])
	dockerfile file('/src/docker/Dockerfile')
}

//dockerCompose {
//	useComposeFiles = ['docker-compose.yaml']
//
//}
